# App2 서버 배포를 위한 설정 파일
# GitHub Repository Variables로 설정하거나 이 파일을 참고하여 직접 설정하세요

app2_config:
  # 프로젝트 기본 정보
  project_name: "walb2-app"
  
  # 데이터베이스 설정
  database:
    name: "musicdb"        # mydb에서 musicdb로 변경
    user: "msadmin"     # dbadmin에서 msadmin으로 변경
    port: "3306"
    rds_identifier: "walb2-rds-database"  # RDS 인스턴스 식별자
  
  # EKS 클러스터 설정
  eks:
    cluster_name: "walb2-eks-cluster"  

  # S3 버킷 설정
  s3:
    bucket_name: "walb2-app-files"     
    region: "ap-northeast-2"
  
  # IAM 역할 설정
  iam:
    role_name: "walb2-app-eks-app-role"  
  
  # Bastion Host 설정
  bastion:
    host_tag_name: "walb2-app-bastion-host"  # Bastion Host의 Name 태그
  
  # 애플리케이션 설정
  application:
    deployment_name: "walb2-app-app"      # 실제 deployment 이름
    image_name: "walb2-app-ecr"           # ECR 리포지토리 이름
    health_check_path: "/api/music"       # Music API health check 경로
  
  # 네트워크 설정
  network:
    region: "ap-northeast-2"
    # 서브넷은 동적으로 조회하지만, 필요시 수동 설정 가능
    # public_subnets: "subnet-xxx,subnet-yyy"

# GitHub Repository Variables 설정 방법:
# GitHub 리포지토리 설정 > Secrets and variables > Actions > Variables 탭에서 다음 변수들을 설정:
#
# PROJECT_NAME: walb2-app
# DB_NAME: musicdb  
# DB_USER: msadmin
# DB_PORT: 3306
# DB_RDS_IDENTIFIER: walb2-rds-database
# EKS_CLUSTER_NAME: walb2-eks-cluster
# S3_BUCKET_NAME: walb2-app-files
# IAM_ROLE_NAME: walb2-app-eks-app-role
# BASTION_HOST_TAG: walb2-app-bastion-host
# DEPLOYMENT_NAME: music1-deployment
# IMAGE_NAME: music1-app
# HEALTH_CHECK_PATH: /api/music
# AWS_REGION: ap-northeast-2
#
# 이렇게 설정하면 deploy-app2.yml에서 해당 값들을 자동으로 사용합니다.