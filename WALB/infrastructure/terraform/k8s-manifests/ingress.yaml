apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: walb-app-ingress
  namespace: walb-app
  annotations:
    # AWS Application Load Balancer 설정
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    
    # 서로 다른 AZ의 퍼블릭 서브넷 2개 사용
    alb.ingress.kubernetes.io/subnets: subnet-053633e89439737ed,subnet-018cf836ea07a606a
    
    # Health Check 설정 (PHP 애플리케이션)
    alb.ingress.kubernetes.io/healthcheck-path: /health.php
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    
    # Load Balancer 설정
    alb.ingress.kubernetes.io/load-balancer-name: walb-app-ingress-alb
    alb.ingress.kubernetes.io/target-group-attributes: |
      stickiness.enabled=false,
      deregistration_delay.timeout_seconds=60,
      load_balancing.algorithm.type=round_robin,
      slow_start.duration_seconds=30
    
    # 보안 그룹은 ALB Controller가 자동 생성
    
    # 태그 설정
    alb.ingress.kubernetes.io/tags: |
      Environment=walb-app,
      Project=walb-app,
      ManagedBy=Kubernetes,
      CreatedBy=AWS-Load-Balancer-Controller,
      Application=PHP-Blog
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: walb-app-service
            port:
              number: 80